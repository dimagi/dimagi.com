@import 'app/lib/jacket';
@import 'app/variables/colors';
@import 'app/variables/sizes';

@include jacket ($jacket-critical) {
  :not(.button)[class*="play-icon-"] {
    display: block;
    position: relative;

    &:before,
    &:after {
      content: ' ';
      display: block;
      left: 50%;
      position: absolute;
      top: 50%;
    }

    &:before {
      background-color: $color-link;
      border-radius: 100%;
      transform: translate(-50%, -50%);
      z-index: 2;
    }

    &:after {
      border-color: transparent;
      border-left-color: $color-white;
      border-right-width: 0;
      border-style: solid;
      transform: translate(-28%, -50%) rotate(360deg);
      z-index: 3;
    }

    &.alt:before {
      background-color: transparent;
      border: 2px solid $color-white;
    }
  }
}

@include jacket ($jacket-standard) {
  .show-time [class*="play-icon-"]:not(.button):before {
    transition: background-color 300ms;
  }
}

@include jacket ($jacket-standard) {
  a:hover[class*="play-icon-"]:not(.button):before,
  a:hover [class*="play-icon-"]:not(.button):before,
  a:focus[class*="play-icon-"]:not(.button):before,
  a:focus [class*="play-icon-"]:not(.button):before {
    background-color: color-hover($color-link);
  }

  a:active[class*="play-icon-"]:not(.button):before,
  a:active [class*="play-icon-"]:not(.button):before {
    background-color: color-active($color-link);
  }
}

@include jacket ($jacket-standard) {
  @each $_theme, $_color in $colors-by-theme {
    .#{$_theme}-theme {
      [class*="play-icon-"]:not(.button):before {
        background-color: $_color;
      }

      a:hover[class*="play-icon-"]:not(.button):before,
      a:hover [class*="play-icon-"]:not(.button):before,
      a:focus[class*="play-icon-"]:not(.button):before,
      a:focus [class*="play-icon-"]:not(.button):before {
        background-color: color-hover($_color);
      }


      a:active[class*="play-icon-"]:not(.button):before,
      a:active [class*="play-icon-"]:not(.button):before {
        background-color: color-active($_color);
      }
    }
  }
}

$_sqrts-by-type: (
  line: 5.65685px,
  small: 8.48528px,
  medium: 16.97056px,
  large: 22.62742px,
);

@include jacket ($jacket-critical) {
  @each $_type, $_sqrt in $_sqrts-by-type {
    $_space: map-get($space-by-type, $_type);

    .play-icon-#{$_type}:not(.button):before {
      height: $_space;
      width: $_space;
    }

    .play-icon-#{$_type}:not(.button):after {
      border-bottom-width: $_space / 5;
      border-left-width: $_sqrt;
      border-top-width: $_space / 5;
    }

    .cta .play-icon-#{$_type} {
      align-items: center;
      display: inline-flex;
      min-height: $_space;
      padding-left: $_space + 10px;
    }

    .cta .play-icon-#{$_type}:not(.button):before,
    .cta .play-icon-#{$_type}:not(.button):after {
      left: $_space / 2;
    }
  }
}
