@import 'app/variables/colors';
@import 'app/variables/sizes';
@import 'app/variables/type';

table {
  background-color: transparent;
  border: 0 solid $color-border;
  border-collapse: collapse;
  border-spacing: 0;
  margin-bottom: $space-line;
  max-width: 100%;
  text-align: left;
  vertical-align: top;
  width: 100%;
}

thead,
tbody,
tfoot,
tr,
th,
td {
  border-color: inherit;
  border-style: inherit;
  text-align: inherit;
  vertical-align: inherit;
}

thead,
tfoot {
  background-color: rgba(0, 0, 0, .06);
}

th {
  color: $color-header;
  font-weight: $font-weight-medium;
}

th,
td {
  background-color: transparent;
  border-width: 1px;
  padding: $space-base;
  transition: background-color 150ms;
}

@mixin _make-table-at($_size: null) {

  $_suffix: if($_size != null, -at-#{$_size}, null);

  .table-border-cells#{$_suffix} {
    th,
    td {
      border-width: 1px;
    }
  }

  .table-border-rows#{$_suffix} {
    th,
    td {
      border-bottom-width: 1px;
      border-left-width: 0;
      border-right-width: 0;
      border-top-width: 1px;
    }
  }

  .table-border-cols#{$_suffix} {
    th,
    td {
      border-bottom-width: 0;
      border-left-width: 1px;
      border-right-width: 1px;
      border-top-width: 0;
    }
  }

  .table-border-none#{$_suffix} {
    th,
    td {
      border-width: 0;
    }
  }

  .table-stripe-rows#{$_suffix} tbody tr {
    &:nth-child(odd) th, // scss-lint:disable SelectorDepth
    &:nth-child(odd) td {
      background-color: transparent;
    }

    &:nth-child(odd) th,
    &:nth-child(odd) td {
      background-color: transparent;
    }

    &:nth-child(even) th,
    &:nth-child(even) td {
      background-color: rgba(0, 0, 0, .02);
    }
  }

  .table-stripe-cols#{$_suffix} tbody tr {
    th:nth-child(odd), // scss-lint:disable SelectorDepth
    td:nth-child(odd) {
      background-color: transparent;
    }

    th:nth-child(even),
    td:nth-child(even) {
      background-color: rgba(0, 0, 0, .02);
    }
  }

  @each $_type in (base, line, small, none) {
    .table-pad-#{$_type}#{$_suffix} {
      th,
      td {
        padding: map-get($space-by-type, $_type);
      }
    }
  }
}

@mixin _make-table-until($_size: null) {

  $_suffix: if($_size != null, -until-#{$_size}, null);

  .table-collapse#{$_suffix} {
    thead,
    tfoot {
      display: none;
    }

    th,
    td {
      display: block;
      text-align: left !important; // scss-lint:disable ImportantRule

      &:not(:first-child) {
        border-top-width: 0;
        padding-top: 0;
      }

      &:not(:last-child) {
        border-bottom-width: 0;
        padding-bottom: 0;
      }

      &[data-col-header]:not(.no-header) {
        text-align: right !important; // scss-lint:disable ImportantRule
      }

      &[data-col-header]:not(.no-header):before { // scss-lint:disable PropertyCount
        color: $color-body-text;
        content: attr(data-col-header);
        display: block;
        float: left;
        font-weight: $font-weight-medium;
        max-width: 50%;
        overflow: hidden;
        padding-right: $space-base;
        text-align: left;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }

    tr:not(:last-child) th:last-child,
    tr:not(:last-c 1pxhild) td:last-child {
      border-bottom-width: 0;
    }
  }
}

@include _make-table-at();
@include _make-table-until();

@each $_size, $_width in $widths-by-size {
  @media (min-width: $_width) {
    @include _make-table-at($_size);
  }

  @media (max-width: $_width - 1px) {
    @include _make-table-until($_size);
  }
}

.table-scrollable {
  margin-bottom: $space-line;
  position: relative;

  &:before { // scss-lint: disable PropertyCount
    border: 1px solid $color-border;
    border-radius: inherit;
    bottom: 0;
    content: ' ';
    display: block;
    left: 0;
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 99;
  }

  table {
    margin-bottom: 0;
  }

  .table-scroll {
    -webkit-overflow-scrolling: touch;
    overflow-x: auto;
    overflow-y: hidden;
    position: relative;
    width: 100%;
  }

  .table-pinned {
    background-color: $color-white;
    bottom: 0;
    left: 0;
    overflow: hidden;
    position: absolute;
    top: 0;

    &:before { // scss-lint:disable PropertyCount
      border: 1px solid $color-border;
      border-radius: inherit;
      bottom: 0;
      content: ' ';
      display: block;
      left: 0;
      pointer-events: none;
      position: absolute;
      right: 0;
      top: 0;
      z-index: 99;
    }

    th:not(:first-child),
    td:not(:first-child) {
      display: none;
    }
  }
}

[role="tabpanel"],
[role="tabpanel"][aria-hidden="true"] {
  display: none;
}

[role="tabpanel"][aria-hidden="false"] {
  display: block;
}

a[role="tab"][aria-selected="false"]:not(:hover):not(:focus):not(:active) {
  color: $color-link-inactive;
}
