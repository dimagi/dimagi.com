@import 'app/variables/sizes';
@import 'app/variables/colors';

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin background-cover($_bg-url) {
  $_bg-thumb: str-replace($_bg-url, 'pages', 'thumbnails/pages');

  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  background-image: url('#{$_bg-thumb}');
  transition: .5s background ease-in-out;
  position: relative;

  &.loaded,
  .bg-preload {
    background-image: url('#{$_bg-url}');
  }
}


@mixin background-placeholder($_bg-color: $color-text, $_bg-position: 'center') {
  background-position: $_bg-position;
  background-repeat: no-repeat;
  background-size: cover;
  background-color: $_bg-color;
  transition: .5s background ease-in-out;

  &::after {
    background-color: $_bg-color;
  }
}


$_default-base-height: 500px;
$_default-height-by-size: (
  small: 500px,
  medium: 500px,
  large: 500px,
  extra-large: 500px,
);

@mixin make-bg($_class, $_bg, $_height-base: $_default-base-height, $_height-by-size: $_default-height-by-size, $_extension: '.jpg') {
  $_bg-thumb: str-replace($_bg, 'pages', 'thumbnails/pages');

  .#{$_class} {
    background-image: url(quote($_bg-thumb + $_extension));
    background-position: center;
    background-repeat: no-repeat;
    background-size: auto 100%;
    height: $_height-base;
    transition: .5s background ease-in-out;
    position: relative;
  }

  .#{$_class} .bg-loader {
    background-image: url(quote($_bg + $_extension));
    background-position: center;
    background-repeat: no-repeat;
    background-size: auto 100%;
  }

  @each $_size, $_height in $_height-by-size {
    @media (min-width: map-get($widths-by-size, $_size)) {
      .#{$_class} {
        background-image: url(quote($_bg-thumb + '.' + $_size + $_extension));
        height: $_height;
      }

      .#{$_class} .bg-loader {
        background-image: url(quote($_bg + '.' + $_size + $_extension));
      }
    }
  };
};

@mixin make-parallax-bg($_class, $_bg, $_height-base: $_default-base-height, $_height-by-size: $_default-height-by-size, $_extension: '.jpg') {
  $_bg-thumb: str-replace($_bg, 'pages', 'thumbnails/pages');

  background-image: url(quote($_bg-thumb + $_extension));
  background-attachment: fixed;
  background-position: 100% auto;
  background-repeat: no-repeat;
  background-size: cover;
  height: $parallax-section-height;
  position: relative;
  transition: .5s background ease-in-out;

  &.loaded,
  .bg-preload {
    background-image: url(quote($_bg + $_extension));
  }

  @each $_size, $_height in $_height-by-size {
    @media (min-width: map-get($widths-by-size, $_size)) {
      background-image: url(quote($_bg-thumb + '.' + $_size + $_extension));
      height: $_height;

      &.loaded,
      .bg-preload {
        background-image: url(quote($_bg + '.' + $_size + $_extension));
      }
    }
  };
}

@mixin make-carousel-slide($_class-name, $_sizes, $_url) {
  $_bg-thumb: str-replace($_url, 'pages', 'thumbnails/pages');

  .carousel .carousel-slide .#{$_class-name} {
    $_base: map-get($_sizes, extra-small);
    $_w: map-get($_base, w);
    $_h: map-get($_base, h);

    background-image: url(quote($_bg-thumb));
    background-repeat: no-repeat;
    background-size: 100%;
    height: $_h;
    transition: .5s background ease-in-out;
    width: $_w;
  }

  .carousel .carousel-slide .#{$_class-name} .bg-preload,
  .carousel .carousel-slide .#{$_class-name}.loaded {
    background-image: url(quote($_url));
  }

  @each $_size, $_screen-width in $widths-by-size {
    @media (min-width: $_screen-width) {
      .carousel .carousel-slide .#{$_class-name} {
        $_dimensions: map-get($_sizes, $_size);
        $_w: map-get($_dimensions, w);
        $_h: map-get($_dimensions, h);

        height: $_h;
        width: $_w;
      }
    }
  }
}
